name: Push Backend Tickitz APP to GHCR and Deploy to VPS
run-name: Release and Deploy Images
on:
    push:
        branches:
            - main
jobs:
    build-and-deploy:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3
            - name: Login to GHCR
              uses: docker/login-action@v3
              with:
                registry: ghcr.io
                username: ${{ github.actor }}
                password: ${{ secrets.GITHUB_TOKEN }}
            - name: Build and push docker image
              uses: docker/build-push-action@v6
              with:
                context: .
                push: true
                tags: ghcr.io/${{ github.repository }}:latest
                file: Dockerfile
            - name: Copy migrations to VPS
              uses: appleboy/scp-action@v0.1.4
              with:
                host: ${{ secrets.REMOTE_HOST }}
                username: ${{ secrets.REMOTE_USER }}
                port: ${{ secrets.PORT }}
                key: ${{ secrets.KEY }}
                source: "migrations"
                target: "/home/naldy/fgo24-be-tickitz"
            - name: Deploy to VPS
              uses: appleboy/ssh-action@v1.0.3
              with:
                username: ${{ secrets.REMOTE_USER }}
                host: ${{ secrets.REMOTE_HOST }}
                key: ${{ secrets.KEY }}
                port: ${{ secrets.PORT }}
                script: |
                 echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
                 docker pull ghcr.io/${{ github.repository }}:latest
                 cd ~/fgo24-be-tickitz
                 docker compose up -d postgres redis
                 docker run --rm \
                    --network netapp \
                    -v "$PWD/migrations:/migrations" \
                    migrate/migrate \
                    -path=/migrations \
                    -database "postgres://postgres:1@postgres:5432/postgres?sslmode=disable" \
                    up
                 docker compose up -d --build app
                 docker image prune -f
            
                